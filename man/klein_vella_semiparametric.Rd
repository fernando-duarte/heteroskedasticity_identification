% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/klein-vella-semiparametric.R
\name{klein_vella_semiparametric}
\alias{klein_vella_semiparametric}
\title{Semiparametric Klein & Vella estimation}
\usage{
klein_vella_semiparametric(
  data,
  y1_var = "Y1",
  y2_var = "Y2",
  x_vars = NULL,
  bandwidth_method = "cv.aic",
  kernel_type = "gaussian",
  max_iter = .hetid_const("MAX_ITERATIONS_KLEIN_VELLA"),
  tol = .hetid_const("EPSILON_TOLERANCE"),
  verbose = TRUE
)
}
\arguments{
\item{data}{Data frame containing Y1, Y2, and X variables}

\item{y1_var}{Name of first endogenous variable (default: "Y1")}

\item{y2_var}{Name of second endogenous variable (default: "Y2")}

\item{x_vars}{Names of exogenous variables (default: auto-detect)}

\item{bandwidth_method}{Method for bandwidth selection ("cv.aic", "cv.ls", "rule.of.thumb")}

\item{kernel_type}{Kernel type for nonparametric regression}

\item{max_iter}{Maximum iterations for the nested optimization}

\item{tol}{Convergence tolerance}

\item{verbose}{Whether to print progress information}
}
\value{
List containing estimation results
}
\description{
Semiparametric Klein & Vella estimation
}
\details{
Implements the semiparametric version of Klein & Vella (2010) using
nonparametric estimation of the conditional variance functions.

Requires the 'np' package for nonparametric regression.
}
\examples{
\dontrun{
# Requires np package
if (requireNamespace("np", quietly = TRUE)) {
  config <- create_klein_vella_config(
    n = .hetid_const("N_SMALL"),
    beta1 = c(0.5, 1.5),
    beta2 = c(1.0, -1.0),
    gamma1 = -0.8,
    rho = 0.6,
    delta1 = c(0.1, 0.3),
    delta2 = c(0.2, -0.2)
  )
  data <- generate_klein_vella_data(config)
  results <- klein_vella_semiparametric(data)
  print(results)
}
}

}
