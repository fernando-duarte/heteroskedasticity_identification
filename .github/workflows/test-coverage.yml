# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples

on:
  push:
    branches: [main, master]
  pull_request:

name: test-coverage.yaml

permissions:
  contents: read

jobs:
  test-coverage:
    runs-on: ubuntu-22.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # Run all tests for coverage (comprehensive level)
      HETID_TEST_LEVEL: comprehensive
      NOT_CRAN: true

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          print(cov)
          cat("Coverage summary:\n")
          print(covr::percent_coverage(cov))
          cat("Generating cobertura.xml...\n")
          covr::to_cobertura(cov, filename = "cobertura.xml")
          cat("Coverage file generated successfully.\n")
        shell: Rscript {0}

      - name: Verify coverage file exists
        run: |
          if [ -f "cobertura.xml" ]; then
            echo "Coverage file found:"
            ls -la cobertura.xml
            echo "File size: $(wc -c < cobertura.xml) bytes"
            echo "First few lines:"
            head -10 cobertura.xml
          else
            echo "ERROR: cobertura.xml not found!"
            echo "Files in current directory:"
            ls -la
            exit 1
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./cobertura.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Fallback - Upload using curl (if main upload fails)
        if: failure()
        run: |
          if [ -f "cobertura.xml" ] && [ -n "${{ secrets.CODECOV_TOKEN }}" ]; then
            echo "Attempting fallback upload using curl..."
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -f cobertura.xml -t ${{ secrets.CODECOV_TOKEN }} -v
          else
            echo "Skipping fallback upload - missing file or token"
          fi

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
